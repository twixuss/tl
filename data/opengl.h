void glBindTexture(GLenum target, GLuint texture);
void glClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void glGetTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);
void glScissor(GLint x, GLint y, GLsizei width, GLsizei height);
void glViewport(GLint x, GLint y, GLsizei width, GLsizei height);

EXTENSIONS

void      glActiveTexture(GLenum texture);
void      glActiveShaderProgram(GLuint pipeline, GLuint program);
void      glAttachShader(GLuint program, GLuint id);
void      glBindBuffer(GLenum target, GLuint buffer);
void      glBindBufferBase(GLenum target, GLuint index, GLuint buffer);
void      glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
void      glBindFramebuffer(GLenum target, GLuint framebuffer);
void      glBindImageTexture(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
void      glBindRenderbuffer(GLenum target, GLuint renderbuffer);
void      glBindSampler(GLuint unit, GLuint sampler);
void      glBindVertexArray(GLuint array);
void      glBlendEquation(GLenum mode);
void      glBlendFuncSeparate(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void      glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
void      glBufferData(GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);
void      glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);
GLenum    glCheckFramebufferStatus(GLenum target);
void      glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
void      glClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat *value);
void      glClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint *value);
void      glClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint *value);
void      glClearNamedFramebufferfi(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat depth, GLint stencil);
void      glClearNamedFramebufferfv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);
void      glClearNamedFramebufferiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);
void      glClearNamedFramebufferuiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);
void      glClearTexImage(GLuint texture, GLint level, GLenum format, GLenum type, const void *data);
void      glCompileShader(GLuint id);
void      glCopyBufferSubData(GLenum readtarget, GLenum writetarget, GLintptr readoffset, GLintptr writeoffset, GLsizeiptr size);
void      glCopyNamedBufferSubData(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
void      glCreateBuffers(GLsizei n, GLuint *buffers);
GLuint    glCreateProgram();
GLuint    glCreateShader(GLenum shaderType);
void      glCreateVertexArrays(GLsizei n, GLuint *arrays);
void      glDebugMessageCallback(DEBUGPROC callback, void *userParam);
void      glDebugMessageControl(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
void      glDeleteBuffers(GLsizei n, const GLuint *buffers);
void      glDeleteFramebuffers(GLsizei n, GLuint *framebuffers);
void      glDeleteProgram(GLuint program);
void      glDeleteShader(GLuint shader);
void      glDeleteVertexArrays(GLsizei n, const GLuint *arrays);
void      glDetachShader(GLuint program, GLuint shader);
void      glDisableVertexArrayAttrib(GLuint vaobj, GLuint index);
void      glDisableVertexAttribArray(GLuint index);
void      glDispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
void      glEnableVertexArrayAttrib(GLuint vaobj, GLuint index);
void      glEnableVertexAttribArray(GLuint index);
void      glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void      glFramebufferTexture1D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void      glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void      glFramebufferTexture3D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint layer);
void      glFramebufferTexture(GLenum target, GLenum attachment, GLuint texture, GLint level);
void      glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
void      glGenBuffers(GLsizei n, GLuint *buffers);
void      glGenFramebuffers(GLsizei n, GLuint *ids);
void      glGenRenderbuffers(GLsizei n, GLuint *renderbuffers);
void      glGenSamplers(GLsizei n, GLuint *samplers);
void      glGenVertexArrays(GLsizei n, GLuint *arrays);
void      glGenerateMipmap(GLenum target);
void      glGenerateTextureMipmap(GLuint texture);
void      glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
void      glGetBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);
void      glGetProgramInfoLog(GLuint program, GLsizei maxLength, GLsizei *length, GLchar *infoLog);
void      glGetProgramiv(GLuint program, GLenum pname, GLint *params);
void      glGetShaderInfoLog(GLuint id, GLsizei maxLength, GLsizei *length, GLchar *infoLog);
void      glGetShaderiv(GLuint id, GLenum pname, GLint *params);
void      glGetTextureImage(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *pixels);
GLint     glGetUniformLocation(GLuint program, const GLchar *name);
GLuint    glGetUniformBlockIndex(GLuint program, const GLchar *uniformBlockName);
void      glLinkProgram(GLuint program);
void *    glMapBuffer(GLenum target, GLenum access);
void *    glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
void *    glMapNamedBuffer(GLuint buffer, GLenum access);
void      glMemoryBarrier(GLbitfield barriers);
void      glNamedBufferData(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
void      glNamedBufferStorage(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
void      glNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
void      glNamedFramebufferTexture(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
void      glNamedFramebufferTextureLayer(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
void      glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
void      glSamplerParameterIiv(GLuint sampler, GLenum pname, const GLint *params);
void      glSamplerParameterIuiv(GLuint sampler, GLenum pname, const GLuint *params);
void      glSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param);
void      glSamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat *params);
void      glSamplerParameteri(GLuint sampler, GLenum pname, GLint param);
void      glSamplerParameteriv(GLuint sampler, GLenum pname, const GLint *params);
void      glShaderSource(GLuint id, GLsizei count, const GLchar *const *string, const GLint *length);
void      glTexImage3D(GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *data);
void      glTexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
void      glUniform1f(GLint location, GLfloat v0);
void      glUniform1fv(GLint location, GLsizei count, const GLfloat *value);
void      glUniform1i(GLint location, GLint v0);
void      glUniform1iv(GLint location, GLsizei count, const GLint *value);
void      glUniform1ui(GLint location, GLuint v0);
void      glUniform1uiv(GLint location, GLsizei count, const GLuint *value);
void      glUniform2f(GLint location, GLfloat v0, GLfloat v1);
void      glUniform2fv(GLint location, GLsizei count, const GLfloat *value);
void      glUniform2i(GLint location, GLint v0, GLint v1);
void      glUniform2iv(GLint location, GLsizei count, const GLint *value);
void      glUniform2ui(GLint location, GLuint v0, GLuint v1);
void      glUniform2uiv(GLint location, GLsizei count, const GLuint *value);
void      glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void      glUniform3fv(GLint location, GLsizei count, const GLfloat *value);
void      glUniform3i(GLint location, GLint v0, GLint v1, GLint v2);
void      glUniform3iv(GLint location, GLsizei count, const GLint *value);
void      glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2);
void      glUniform3uiv(GLint location, GLsizei count, const GLuint *value);
void      glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void      glUniform4fv(GLint location, GLsizei count, const GLfloat *value);
void      glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void      glUniform4iv(GLint location, GLsizei count, const GLint *value);
void      glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void      glUniform4uiv(GLint location, GLsizei count, const GLuint *value);
void      glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
void      glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLboolean glUnmapBuffer(GLenum target);
GLboolean glUnmapNamedBuffer(GLuint buffer);
void      glUseProgram(GLuint program);
void      glVertexArrayAttribBinding(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
void      glVertexArrayAttribFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
void      glVertexArrayAttribIFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void      glVertexArrayAttribLFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void      glVertexArrayElementBuffer(GLuint vaobj, GLuint buffer);
void      glVertexArrayVertexBuffer(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
void      glVertexAttribBinding(GLuint attribindex, GLuint bindingindex);
void      glVertexAttribFormat(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
void      glVertexAttribIFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void      glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
void      glVertexAttribLFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void      glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);


WINDOWS

BOOL  wglChoosePixelFormatARB(HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);
HGLRC wglCreateContextAttribsARB(HDC hDC, HGLRC hShareContext, const int *attribList);
BOOL  wglGetPixelFormatAttribivARB(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues);
BOOL  wglSwapIntervalEXT(int interval);
